digraph "dag-combine1 input for add:" {
	rankdir="BT";
	label="dag-combine1 input for add:";

	Node0x5bafc0800260 [shape=record,shape=Mrecord,label="{EntryToken|t0|{<d0>ch|<d1>glue}}"];
	Node0x5bafc084e3c0 [shape=record,shape=Mrecord,label="{Register %0|t1|{<d0>i32}}"];
	Node0x5bafc084e430 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1}|CopyFromReg|t2|{<d0>i32|<d1>ch}}"];
	Node0x5bafc084e430:s0 -> Node0x5bafc0800260:d0[color=blue,style=dashed];
	Node0x5bafc084e430:s1 -> Node0x5bafc084e3c0:d0;
	Node0x5bafc084e4a0 [shape=record,shape=Mrecord,label="{Register %1|t3|{<d0>i32}}"];
	Node0x5bafc084e510 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1}|CopyFromReg|t4|{<d0>i32|<d1>ch}}"];
	Node0x5bafc084e510:s0 -> Node0x5bafc0800260:d0[color=blue,style=dashed];
	Node0x5bafc084e510:s1 -> Node0x5bafc084e4a0:d0;
	Node0x5bafc084e580 [shape=record,shape=Mrecord,label="{FrameIndex\<0\>|t5|{<d0>i32}}"];
	Node0x5bafc084e5f0 [shape=record,shape=Mrecord,label="{Constant\<0\>|t6|{<d0>i32}}"];
	Node0x5bafc084e660 [shape=record,shape=Mrecord,label="{undef|t7|{<d0>i32}}"];
	Node0x5bafc084e6d0 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1|<s2>2|<s3>3}|store\<(store (s32) into %ir.3)\>|t8|{<d0>ch}}"];
	Node0x5bafc084e6d0:s0 -> Node0x5bafc0800260:d0[color=blue,style=dashed];
	Node0x5bafc084e6d0:s1 -> Node0x5bafc084e430:d0;
	Node0x5bafc084e6d0:s2 -> Node0x5bafc084e580:d0;
	Node0x5bafc084e6d0:s3 -> Node0x5bafc084e660:d0;
	Node0x5bafc084e740 [shape=record,shape=Mrecord,label="{FrameIndex\<1\>|t9|{<d0>i32}}"];
	Node0x5bafc084e7b0 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1|<s2>2|<s3>3}|store\<(store (s32) into %ir.4)\>|t10|{<d0>ch}}"];
	Node0x5bafc084e7b0:s0 -> Node0x5bafc084e6d0:d0[color=blue,style=dashed];
	Node0x5bafc084e7b0:s1 -> Node0x5bafc084e510:d0;
	Node0x5bafc084e7b0:s2 -> Node0x5bafc084e740:d0;
	Node0x5bafc084e7b0:s3 -> Node0x5bafc084e660:d0;
	Node0x5bafc084e820 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1|<s2>2}|load\<(dereferenceable load (s32) from %ir.3)\>|t11|{<d0>i32|<d1>ch}}"];
	Node0x5bafc084e820:s0 -> Node0x5bafc084e7b0:d0[color=blue,style=dashed];
	Node0x5bafc084e820:s1 -> Node0x5bafc084e580:d0;
	Node0x5bafc084e820:s2 -> Node0x5bafc084e660:d0;
	Node0x5bafc084e890 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1|<s2>2}|load\<(dereferenceable load (s32) from %ir.4)\>|t12|{<d0>i32|<d1>ch}}"];
	Node0x5bafc084e890:s0 -> Node0x5bafc084e7b0:d0[color=blue,style=dashed];
	Node0x5bafc084e890:s1 -> Node0x5bafc084e740:d0;
	Node0x5bafc084e890:s2 -> Node0x5bafc084e660:d0;
	Node0x5bafc084e900 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1}|add nsw|t13|{<d0>i32}}"];
	Node0x5bafc084e900:s0 -> Node0x5bafc084e820:d0;
	Node0x5bafc084e900:s1 -> Node0x5bafc084e890:d0;
	Node0x5bafc084e970 [shape=record,shape=Mrecord,label="{Register $v0|t14|{<d0>i32}}"];
	Node0x5bafc084e9e0 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1|<s2>2}|CopyToReg|t15|{<d0>ch|<d1>glue}}"];
	Node0x5bafc084e9e0:s0 -> Node0x5bafc084e7b0:d0[color=blue,style=dashed];
	Node0x5bafc084e9e0:s1 -> Node0x5bafc084e970:d0;
	Node0x5bafc084e9e0:s2 -> Node0x5bafc084e900:d0;
	Node0x5bafc084ea50 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1|<s2>2}|Cpu0ISD::Ret|t16|{<d0>ch}}"];
	Node0x5bafc084ea50:s0 -> Node0x5bafc084e9e0:d0[color=blue,style=dashed];
	Node0x5bafc084ea50:s1 -> Node0x5bafc084e970:d0;
	Node0x5bafc084ea50:s2 -> Node0x5bafc084e9e0:d1[color=red,style=bold];
	Node0x0[ plaintext=circle, label ="GraphRoot"];
	Node0x0 -> Node0x5bafc084ea50:d0[color=blue,style=dashed];
}
